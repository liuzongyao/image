{
  "mount_points": [
    {
      "path": "/var/config/nginx.conf", 
      "type": "raw", 
      "value": "xxxxxxxxxxxxx\ndsadsadasdssssssss\nend"
    }, 
    {
      "vaule": {
        "name": "config-example", 
        "key": "key2", 
        "uuid": "94cca16c-732d-11e6-aef2-024281e81252"
      }, 
      "path": "/etc/nginx/sites-enabled/nginx.conf", 
      "type": "config"
    }
  ], 
  "service_name": "product-service", 
  "labels": [
    {
      "propagate": true, 
      "key": "key"
    }
  ], 
  "update_strategy": {
    "max_unavailable": "1", 
    "max_surge": "1"
  }, 
  "target_state": "STARTED", 
  "instance_envvars": {
    "__ALAUDA_FILE_LOG_PATH__": "/var/log/*.txt", 
    "__ALAUDA_EXCLUDE_LOG_PATH__": "/var/log/log.text", 
    "env": "test"
  }, 
  "space_name": "staging", 
  "custom_instance_size": {
    "mem": 1024, 
    "cpu": 0.125
  }, 
  "envfiles": [
    {
      "name": "test", 
      "uuid": "c04123e7-a8fd-4e6c-b8e3-585c4097e668"
    }
  ], 
  "version": "v2", 
  "entrypoint": "", 
  "node_selector": {
    "ip": "10.23.0.7"
  }, 
  "autoscaling_config": {
    "decrease_delta": 1, 
    "wait_period": 30, 
    "maximum_num_instances": 6, 
    "increase_delta": 1, 
    "minimum_num_instances": 1
  }, 
  "run_command": "", 
  "region_name": "laok8sazure", 
  "scaling_mode": "AUTO", 
  "image_name": "laok8sazure-testorg001.stagingindex.alauda.cn:5000/testorg001/hello-world", 
  "network_mode": "Flannel", 
  "health_checks": [
    {
      "protocol": "HTTP", 
      "ignore_http1xx": false, 
      "timeout_seconds": 300, 
      "interval_seconds": 120, 
      "command": "command", 
      "max_consecutive_failures": 10, 
      "path": "/", 
      "port": 65535, 
      "grace_period_seconds": 100
    }
  ], 
  "load_balancers": [
    {
      "listeners": [
        {
          "rules": [
            {
              "url": "/files", 
              "domain": "a.b.com"
            }
          ], 
          "listener_port": 80, 
          "protocol": "http", 
          "container_port": 80
        }, 
        {
          "listener_port": 8080, 
          "protocol": "tcp", 
          "container_port": 8080
        }, 
        {
          "domains": [
            "www.alauda-test.com"
          ], 
          "certificate_name": "mycert", 
          "listener_port": 443, 
          "protocol": "https", 
          "container_port": 443
        }
      ], 
      "version": "2", 
      "type": "haproxy", 
      "name": "haproxy-23-99-114-240", 
      "load_balancer_id": "7ed6833f-f948-4444-4246-e643a1528cb6"
    }
  ], 
  "target_num_instances": 1, 
  "instance_size": "CUSTOMIZED", 
  "kube_config": {
    "services": [
      {
        "type": "Headless", 
        "editable": true, 
        "name": "hello-hl-hh"
      }
    ], 
    "pod": {
      "podAffinity": {
        "requiredDuringSchedulingIgnoredDuringExecution": [
          {
            "labelSelector": {
              "matchExpressions": [
                {
                  "operator": "In", 
                  "values": [
                    "value1", 
                    "value2"
                  ], 
                  "key": "security"
                }
              ]
            }, 
            "namespaces": [
              "testorg001"
            ], 
            "topologyKey": "kubernetes.io/hostname"
          }
        ], 
        "preferredDuringSchedulingIgnoredDuringExecution": [
          {
            "podAffinityTerm": {
              "labelSelector": {
                "matchExpressions": [
                  {
                    "operator": "Exists", 
                    "key": "security"
                  }
                ]
              }, 
              "topologyKey": "kubernetes.io/hostname"
            }, 
            "weight": 10
          }
        ]
      }, 
      "labels": {
        "key": "value"
      }, 
      "podAntiAffinity": {
        "requiredDuringSchedulingIgnoredDuringExecution": [
          {
            "labelSelector": {
              "matchExpressions": [
                {
                  "operator": "DoesNotExist", 
                  "key": "security"
                }
              ]
            }, 
            "topologyKey": "kubernetes.io/hostname"
          }
        ], 
        "preferredDuringSchedulingIgnoredDuringExecution": [
          {
            "podAffinityTerm": {
              "labelSelector": {
                "matchExpressions": [
                  {
                    "operator": "NotIn", 
                    "values": [
                      "value1", 
                      "value2"
                    ], 
                    "key": "security"
                  }
                ]
              }, 
              "topologyKey": "kubernetes.io/hostname"
            }, 
            "weight": 10
          }
        ]
      }
    }
  }, 
  "ports": [
    80
  ], 
  "volumes": {
    "app_volume_dir": "/xq/image", 
    "volume_id": "host_path", 
    "volume_name": "/xq/host"
  }, 
  "image_tag": "latest", 
  "pod_controller": "Deployment"
}