resource:
  name: $app_name
  description: $description
namespace:
  name: $K8S_NAMESPACE
  uuid: $K8S_NS_UUID
cluster:
  name: $REGION_NAME
  uuid: $REGION_ID
kubernetes:
  - apiVersion: extensions/v1beta1
    firstTimestamp: null
    kind: Deployment
    lastTimestamp: null
    metadata:
      name: $app_name
      namespace: $K8S_NAMESPACE
    spec:
      replicas: 1
      strategy:
        type: RollingUpdate
      template:
        metadata:
          labels:
            app.alauda.io/name: $app_name
            service.alauda.io/name: $app_name
            servicelabel: servicelabel
        spec:
          affinity: {}
          containers:
          - image: $IMAGE
            imagePullPolicy: Always
            name: $app_name
            resources:
              limits:
                cpu: 20m
                memory: 50M
              requests:
                cpu: 20m
                memory: 50M
            env:
              - name: __ALAUDA_FILE_LOG_PATH__
                value: /var/*.txt
            volumeMounts:
              - mountPath: /localpath/test/
                name: hostpath
          volumes:
            - name: hostpath
              hostPath:
              path: /localpath/test/
  - apiVersion: autoscaling/v1
    firstTimestamp: null
    kind: HorizontalPodAutoscaler
    lastTimestamp: null
    metadata:
      name: $app_name
      namespace: $K8S_NAMESPACE
    spec:
      maxReplicas: 5
      minReplicas: 1
      scaleTargetRef:
        apiVersion: extensions/v1beta1
        kind: Deployment
        name: $app_name
  - apiVersion: v1
    firstTimestamp: null
    kind: Service
    lastTimestamp: null
    metadata:
      annotations:
        loadbalancer.alauda.io/bind: '[{"container_port":80,"protocol":"http","name":"$HAPROXY_NAME","port":80}]'
      labels:
        app.alauda.io/name: $app_name
        app.rubick.alauda.io/name: $app_name
        service.alauda.io/name: $app_name
      name: $app_name
      namespace: $K8S_NAMESPACE
    spec:
      ports:
      - name: 80-80-clusterip
        port: 80
        protocol: TCP
        targetPort: 80
      selector:
        service.alauda.io/name: $app_name